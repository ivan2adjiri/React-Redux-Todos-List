{"version":3,"sources":["actions/index.js","components/App.js","reducers/items.js","reducers/index.js","components/Item.js","components/ItemsList.js","index.js"],"names":["incrementId","connect","_ref","qty","input","item","dispatch","React","createElement","className","onSubmit","e","preventDefault","value","trim","text","type","id","addItems","name","ref","node","items","state","arguments","length","undefined","action","concat","_toConsumableArray","completed","map","_objectSpread","combineReducers","Item","onClick","number","style","textDecoration","updateItem","Object","assign","key","store","createStore","rootReducer","ReactDOM","render","Provider","App","ItemsList","document","getElementById"],"mappings":"2MAAIA,EAAc,ECkCHC,gBA9BH,SAAHC,GAASA,EAAHC,IAAoB,IAC3BC,EAAOC,EADKC,EAAQJ,EAARI,SAahB,OACIC,IAAAC,cAAA,OAAKC,UAAW,WACZF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,QAAME,SAbO,SAACC,GAClBA,EAAEC,iBACGR,EAAMS,MAAMC,SACjBT,EAAO,CACHU,KAAMX,EAAMS,OAEhBP,EDXgB,SAAAD,GAAI,MAAK,CAC7BW,KAAM,YACNC,GAAIjB,IACJe,KAAMV,EAAKU,MCQEG,CAASb,IAClBD,EAAMS,MAAQ,MAONN,IAAAC,cAAA,OAAKC,UAAW,eACZF,IAAAC,cAAA,aAAO,UACPD,IAAAC,cAAA,SAAOQ,KAAK,OAAOG,KAAK,OAAOC,IAAK,SAAAC,GAAI,OAAKjB,EAAQiB,MAEzDd,IAAAC,cAAA,OAAKC,UAAW,eACZF,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,SAAOQ,KAAK,SAASH,MAAM,+BCPhCS,EApBD,WAAwB,IAAvBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7B,OAAQC,EAAOX,MACX,IAAK,YACD,SAAAY,OAAAC,YACON,GAAK,CACR,CACIN,GAAIU,EAAOV,GACXF,KAAMY,EAAOZ,KACbe,WAAW,KAGvB,IAAK,cACD,OAAOP,EAAMQ,IAAI,SAAA1B,GAAI,OACjBA,EAAKY,KAAOU,EAAOV,GAAEe,YAAA,GAAQ3B,EAAI,CAAEyB,WAAYzB,EAAKyB,YAAczB,IAE1E,QACI,OAAOkB,ICbJU,cAAgB,CAC3BX,UCgBWY,EAjBF,SAAHhC,GAAA,IAAMiC,EAAOjC,EAAPiC,QAASL,EAAS5B,EAAT4B,UAAWf,EAAIb,EAAJa,KAAYb,EAANkC,OAAM,OAC9C7B,IAAAC,cAAA,MAAIC,UAAW,OACb0B,QAASA,EACTE,MAAO,CACLC,eAAgBR,EAAY,eAAiB,SAG9Cf,ICYUd,cARS,SAAAsB,GAAK,MAAK,CAC9BD,MAAOC,EAAMD,QAGU,SAAAhB,GAAQ,MAAK,CACpCiC,WAAY,SAAAtB,GAAE,OAAIX,ELXI,SAAAW,GAAE,MAAK,CAC7BD,KAAM,cACNC,MKS2BsB,CAAWtB,OAG3BhB,CAhBG,SAAHC,GAAA,IAAMoB,EAAKpB,EAALoB,MAAOiB,EAAUrC,EAAVqC,WAAU,OAClChC,IAAAC,cAAA,MAAIC,UAAW,aACVa,EAAMS,IAAI,SAAA1B,GAAI,OACXE,IAAAC,cAAC0B,EAAIM,OAAAC,OAAA,CAACC,IAAMrC,EAAKY,IAASZ,EAAI,CAAE8B,QAAS,kBAAMI,EAAWlC,EAAKY,aCDrE0B,SAAQC,YAAYC,IAE1BC,IAASC,OACLxC,IAAAC,cAACwC,IAAQ,CAACL,MAAQA,GACdpC,IAAAC,cAACyC,EAAG,MACJ1C,IAAAC,cAAA,WACAD,IAAAC,cAAC0C,EAAS,OAEdC,SAASC,eAAe","file":"static/js/main.f743f0c1.chunk.js","sourcesContent":["let incrementId = 0;\n\nexport const addItems = item => ({\n    type: 'ADD_ITEMS',\n    id: incrementId++,\n    text: item.text\n});\n\nexport const updateItem = id => ({\n    type: 'UPDATE_ITEM',\n    id\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItems } from '../actions';\n\nconst App = ({ qty, dispatch }) => {\n    let input, item;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!input.value.trim()) { return }\n        item = {\n            text: input.value\n        }\n        dispatch(addItems(item));\n        input.value = '';\n    };\n\n    return (\n        <div className={'wrapper'}>\n            <h1>TODOS</h1>\n            <form onSubmit={handleSubmit} >\n                <div className={'div-wrapper'}>\n                    <label>Todo: </label>\n                    <input type=\"text\" name=\"name\" ref={node => (input = node)} />\n                </div>\n                <div className={'div-wrapper'}>\n                    <label>&nbsp;</label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default connect()(App)","const items = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ITEMS':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n        case 'UPDATE_ITEM':\n            return state.map(item =>\n                item.id === action.id ? { ...item, completed: !item.completed } : item\n            )\n        default:\n            return state\n    }\n}\n\nexport default items;","import { combineReducers } from 'redux';\nimport items from './items';\n\nexport default combineReducers({\n    items\n});\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Item = ({ onClick, completed, text, number }) => (\n  <li className={'item'}\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Item","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateItem } from '../actions'\nimport Item from './Item';\n\n\nconst ItemsList = ({ items, updateItem }) => (\n    <ul className={'item-list'}>\n        {items.map(item => (\n            <Item key={ item.id } {...item} onClick={() => updateItem(item.id)}/>\n        ))}\n    </ul>\n)\n\nconst mapStateToProps = state => ({\n    items: state.items\n})\n\nconst mapDispatchToProps = dispatch => ({\n    updateItem: id => dispatch(updateItem(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsList)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport ItemsList from './components/ItemsList';\nimport './index.css';\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n        <hr/>\n        <ItemsList />\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}